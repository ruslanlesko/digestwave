version: '3'

services:

  db:
    build: postsdb
    ports:
      - "5432:5432"
    container_name: postsdb
    environment:
      POSTGRES_PASSWORD: connectpass
      POSTGRES_USER: connect
      POSTGRES_DB: digestwave
  
  connect:
    build: debezium-jdbc
    ports:
      - "8083:8083"
      - "5005:5005"
    container_name: connect
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      STATUS_STORAGE_TOPIC: connect_statuses
  
  connectinit:
    build: connectinit
    container_name: connectinit
    restart: "on-failure"
    environment:
      BASE_URL: http://connect:8083
    
  schema:
    image: confluentinc/cp-schema-registry:7.0.1
    container_name: schema
    restart: "always"
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:9092

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper

  kafka:
    image: wurstmeister/kafka:2.13-2.7.1
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "posts:1:1"

  readability:
    image: phpdockerio/readability-js-server
    container_name: readability

  scraper:
    build: ../scraper
    container_name: scraper
    restart: "always"
    environment:
      SCR_READABILITY_URI: "http://readability:3000"
      SCR_KAFKA_ADDRESS: "kafka:9092"
      SCR_SCHEMA_REGISTRY_ADDRESS: "http://schema:8081"
      SCR_POLLING_INTERVAL: "3600"
      SCR_LOGGING_LEVEL: "info"